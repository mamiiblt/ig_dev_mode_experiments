[{"id":"content:0.index.md","path":"/","dir":"","title":"Home","description":"","keywords":[],"body":"     Instagram Developer Options   Developer options documentation for modded instagram.  "},{"id":"content:1.about:1.about.md","path":"/about/about","dir":"about","title":"What are developer options?","description":"Developer options is a page that Instagram's developers have added to the app. Here you can change, edit or add features related to Instagram.","keywords":["How can I access these developer options?","Open Developer Options"],"body":"  What are developer options?  Developer options is a page that Instagram's developers have added to the app. Here you can change, edit or add features related to Instagram.  How can I access these developer options?  There is currently no way for iOS, but you can access these options using Moded Instagram apps for Android (e.g. MyInsta, Instander, AeroInsta)   The features in the developer options include features that are being tested by Instagram and are in unstable development. Since these options are not yet stable, they may cause the app to crash on some devices.  Download MyInsta (a.k.a. InstaSmash)  Open Developer Options   Open your modded instagram.   ${press_home_image}   Click on   MetaConfig Settings & Overrides   ${mconf_selection}    âœ¨ Now you know how to access developer options! Check the sidebar to discover new options!"},{"id":"content:1.about:2.feedback.md","path":"/about/feedback","dir":"about","title":"Send feedback!","description":"All the content in this documentation is developed with everyone's input, so if you find a new developer option, let me know!","keywords":[],"body":"  Send feedback!  All the content in this documentation is developed with everyone's input, so if you find a new developer option, let me know!  Contact   Instagram   Telegram   Mail"},{"id":"content:2.story:_2.composables.md","path":"/story/_2.composables","dir":"story","title":"Composables","description":"Discover the Docus composables to use in your custom Vue components and pages.","keywords":["useDocus()","useMenu()","useScrollspy()"],"body":"  Composables  Discover the Docus composables to use in your custom Vue components and pages.   useDocus()    useDocus  ()  gives access to docus runtime config, all default values and your custom config from   app.config.ts    config  refers to the merged config of the current page.   main ,   header ,   aside ,   footer  and   titleTemplate  can be set from   _dir.yml  and any   page.md  file.  The configs in   app.config  file will be used as defaults.     <  script   setup  >   const   {   config   }   =   useDocus  ()   </  script  >    <  template  >     <  div  >       <  h1  >{{ config.title }}</  h1  >       <  p  >{{ config.description }}</  p  >     </  div  >   </  template  >    tree  refers to the current navigation tree that is displayed in the   aside  component.     <  script   setup  >   const   {   tree   }   =   useDocus  ()   </  script  >    <  template  >     <  DocsAsideTree   :links  =  \"tree\"   />   </  template  >    useMenu()   useMenu()  gives access to   $menu  plugin controlling mobile navigation globally.     const   {     // Is menu visible     visible  ,     // Close menu function     close  ,     // Open menu function     open  ,     // Toggle menu function     toggle   }   =   useMenu  ()    useScrollspy()   useScrollspy()  is used in   docs  layout to make the ToC display the currently visible headings.     const   {     // Headings on the page     visibleHeadings  ,     // Active headings (for the current page)     activeHeadings  ,     // Update headings (an array of DOM nodes)     updateHeadings   }   =   useScrollspy  ()   html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}"},{"id":"content:2.story:_3.layouts.md","path":"/story/_3.layouts","dir":"story","title":"Layouts","description":"Docus provides multiple built-in layouts for displaying your Markdown pages.","keywords":["default","page"],"body":"  Layouts  Docus provides multiple built-in layouts for displaying your Markdown pages.   default  The default layout for every page created in the project. This layout renders multiple section alongside the content:   Aside navigation menu (togglable with   aside: false/true )  Page bottom section (togglable with   bottom: false/true )  Table of content (togglable with   toc: false/true )     ---   aside  :   true   bottom  :   true   toc  :   false   ---    Your awesome content  Current page is live sample of default layout.   page   page  layout is content focused layout. This layout does not render aside menu of table of contents.  This layout accept some configuration from content front-matter.    fluid : By setting   fluid: true  in content front-matter the content will be rendered in full width.   constrainedClass : Using this option you can modify layout container look. Like constraining layout width of changing the background.   padded : Setting   padded: true  in front-matter will add horizontal padding in the layout.     ---   title  :   Home   layout  :   page   fluid  :   true   ---  Check   Home page  as live sample of page layout  html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}"},{"id":"content:2.story:1.stories_tray_ranking_experiments.md","path":"/story/stories_tray_ranking_experiments","dir":"story","title":"stories-tray-ranking-experiments","description":"","keywords":["About","<Card />","Activate Experiment"],"body":"  stories-tray-ranking-experiments   Story  Design  v303.0.0.40.109  About  It offers a rectangular view with previews for stories.   <Card />         Activate Experiment  "},{"id":"content:3.direct:1.index.md","path":"/direct","dir":"","title":"Example dirpane","description":"welcome","keywords":[],"body":"  Example dirpane  welcome"}]